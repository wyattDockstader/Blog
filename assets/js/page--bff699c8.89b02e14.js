(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{466:function(e,t,o){"use strict";o.r(t);var i=o(2),s=Object(i.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v("Cool Site Clone: https://wyattdockstader.github.io/cool-site/")]),e._v(" "),o("p",[o("b",[e._v("What is a Pseudo-Class and what are some of the most common ones you think you will use?")])]),e._v(" "),o("p",[e._v('A Pseudo-Class is a css selector that targets elements in a specific state. I can particularlly see ":hover" being useful for a more interactive styling for users.')]),e._v(" "),o("p",[o("b",[e._v("What is Specificity and how might you use it to your benefit?")])]),e._v(" "),o("p",[e._v("Specificty is a system built into css that decides which of multiple rules targeting the same element gets applied.  You can use specificity to over rule load order and style a element differently than it would otherwise be.")]),e._v(" "),o("p",[o("b",[e._v("What problems do you think you could run into if you over-utilized the !important feature?")])]),e._v(" "),o("p",[e._v("The !important feature over rules all specificity, the problem would arise if you needed to style the element in your code, specificity would never override the !important feature.")])])}),[],!1,null,null,null);t.default=s.exports}}]);