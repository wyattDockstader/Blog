(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{474:function(e,a,o){"use strict";o.r(a);var t=o(2),n=Object(t.a)({},(function(){var e=this,a=e.$createElement,o=e._self._c||a;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v("Read Intro to JS > var, let and const and answer the following questions\n"),o("b",[e._v("What is Scope ?")]),e._v("\nThe scope of a variable refers to where its available for use a variable declared outside a function with var would be globally scoped and could be accessed from anywhere in the code while a variable declared inside a function would be function scoped and only referencable from inside the function.")]),e._v(" "),o("p",[o("b",[e._v("What is Hoisting ?")]),e._v("\nHoisting is a javascript mechanism that moves variables and declerations to the top of their scope without their value attached, so a variable can be hoisted to the top of their scope and return value undifined.")]),e._v(" "),o("p",[o("b",[e._v("In what cases might you use let vs const vs var?")]),e._v("\nYou would use Var to globally scope a variable and or needed to redifine the variable, you would use let to block scope a variable, const is blocked scoped and cannot be redefined.")])])}),[],!1,null,null,null);a.default=n.exports}}]);